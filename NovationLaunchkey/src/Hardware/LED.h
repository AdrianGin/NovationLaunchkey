#ifndef LED_H
#define LED_H

#ifdef __cplusplus
extern "C" {
#endif


#include "NUC1xx.h"
#include "DrvSys.h"
#include "DrvGPIO.h"

#define LED_DATA_PORT	(E_GPA)


typedef enum
{
	LED_DATA_LINE0 = 6,
	LED_DATA_LINE1 = 7,
	LED_DATA_LINE2 = 10,
	LED_DATA_LINE3 = 11,
	LED_DATA_LINE4 = 12,
	LED_DATA_LINE5 = 13,
	LED_DATA_LINE6 = 14,
	LED_DATA_LINE7 = 15,

} E_LED_DATA_LINES;


/*

7 Segment index
 ___A___
|     	|
F		B
|___G___|
|		|
E		C
|___D___| DOT

 */

#define LEDS_PER_COLUMN (8)


typedef enum
{
	LED_7SEG0_A = 0,
	LED_7SEG0_B,
	LED_7SEG0_C,
	LED_7SEG0_D,
	LED_7SEG0_E,
	LED_7SEG0_F,
	LED_7SEG0_G,
	LED_7SEG0_DOT,

	LED_7SEG1_A,
	LED_7SEG1_B,
	LED_7SEG1_C,
	LED_7SEG1_D,
	LED_7SEG1_E,
	LED_7SEG1_F,
	LED_7SEG1_G,
	LED_7SEG1_DOT,

	LED_7SEG2_A,
	LED_7SEG2_B,
	LED_7SEG2_C,
	LED_7SEG2_D,
	LED_7SEG2_E,
	LED_7SEG2_F,
	LED_7SEG2_G,
	LED_7SEG2_DOT,

	LED_INCONTROL_TOP,
	LED_INCONTROL_MID,
	LED_INCONTROL_BOT,
	LED_MASTER,

	LED_CIRCLE_PAD0_G,
	LED_CIRCLE_PAD0_R,

	LED_CIRCLE_PAD1_G,
	LED_CIRCLE_PAD1_R,

	LED_PAD3_G,
	LED_PAD3_R,
	LED_PAD4_G,
	LED_PAD4_R,
	LED_PAD13_G,
	LED_PAD13_R,
	LED_PAD8_G,
	LED_PAD8_R,
	LED_PAD2_G,
	LED_PAD2_R,
	LED_PAD7_G,
	LED_PAD7_R,
	LED_PAD14_G,
	LED_PAD14_R,
	LED_PAD10_G,
	LED_PAD10_R,
	LED_PAD1_G,
	LED_PAD1_R,
	LED_PAD6_G,
	LED_PAD6_R,
	LED_PAD15_G,
	LED_PAD15_R,
	LED_PAD11_G,
	LED_PAD11_R,
	LED_PAD0_G,
	LED_PAD0_R,
	LED_PAD5_G,
	LED_PAD5_R,
	LED_PAD12_G,
	LED_PAD12_R,
	LED_PAD9_G,
	LED_PAD9_R,

   LED_COUNT

} E_LED_INDEX;


extern uint8_t LED_PAD_SEQUENCE[];

void LED_GPIO_Init(void);
void LED_SetData(uint16_t data);


//Setup GPIO

#ifdef __cplusplus
}
#endif

#endif
